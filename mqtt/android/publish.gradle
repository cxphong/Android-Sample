/*
 * Copyright 2016 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 *  To publish on Maven local:
 *     ./gradlew -c [driverName]/publish-settings.gradle clean publishToMavenLocal
 *
 *  To publish on Bintray:
 *     - set environmental variables BINTRAY_USER and BINTRAY_API_KEY to proper values
 *     ./gradlew -c [driverName]/publish-settings.gradle clean bintrayUpload
 *
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

allprojects {
    repositories {
        jcenter()
    }
}

apply from: 'build.gradle'
apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

publishing {
    publications {
        driverPublish(MavenPublication) {
            groupId 'se.wetcat.qatja'
            artifactId "$project.name"
            version ARTIFACT_VERSION
            artifact sourceJar
            artifact("$buildDir/outputs/aar/$project.name-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if(it.group != null && it.name != null &&
                            !"unspecified".equals(it.name) && it.version != null &&
                            !"unspecified".equals(it.version))
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

publishToMavenLocal.dependsOn build
bintrayUpload.dependsOn build

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['driverPublish']

    publish = true

    pkg {
        repo = 'Qatja'
        name = "$project.name"
        userOrg = 'wetcat'

        version {
            name = ARTIFACT_VERSION
            gpg {
                sign = true
            }
        }
    }
}